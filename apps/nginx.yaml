apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: nginx
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd.argoproj.io/sync-wave: "5"
spec:
  destination:
    namespace: nginx
    server: 'https://kubernetes.default.svc'
  source:
    path: ''
    repoURL: 'https://kubernetes.github.io/ingress-nginx'
    targetRevision: 4.1.1
    chart: ingress-nginx
    helm:
      values: |
        controller:
          # Process Ingress objects without ingressClass annotation/ingressClassName field
          # Overrides value for --watch-ingress-without-class flag of the controller binary
          # Defaults to false
          watchIngressWithoutClass: true
          
          admissionWebhooks:
            annotations:
              "linkerd.io/inject": disabled
          
          ## Additional command line arguments to pass to nginx-ingress-controller
          ## E.g. to specify the default SSL certificate you can use
          ## extraArgs:
          ##   default-ssl-certificate: "<namespace>/<secret_name>"
          extraArgs:
            enable-ssl-passthrough: ""
          
          ingressClassResource:
            name: nginx
            enabled: true
            default: true
            
          ## Annotations to be added to the controller Deployment or DaemonSet
          ##
          annotations:
            "linkerd.io/inject": enabled
            
          affinity:
            
            # # An example of required pod anti-affinity
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - ingress-nginx
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                    - ingress-nginx
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                    - controller
                topologyKey: "kubernetes.io/hostname"
                
          ## Annotations to be added to controller pods
          ##
          podAnnotations:
            "linkerd.io/inject": enabled

          replicaCount: 3
          
          resources:
          #  limits:
          #    cpu: 100m
          #    memory: 90Mi
            requests:
              cpu: 100m
              memory: 345Mi

          metrics:
            port: 10254
            # if this port is changed, change healthz-port: in extraArgs: accordingly
            enabled: true
            
            serviceMonitor:
              enabled: false
              
            prometheusRule:
              enabled: false
              rules:
              # These are just examples rules, please adapt them to your needs
              - alert: NGINXConfigFailed
                expr: count(nginx_ingress_controller_config_last_reload_successful == 0) > 0
                for: 1s
                labels:
                  severity: critical
                annotations:
                  description: bad ingress config - nginx config test failed
                  summary: uninstall the latest ingress changes to allow config reloads to resume
              - alert: NGINXCertificateExpiry
                expr: (avg(nginx_ingress_controller_ssl_expire_time_seconds) by (host) - time()) < 604800
                for: 1s
                labels:
                  severity: critical
                annotations:
                  description: ssl certificate(s) will expire in less then a week
                  summary: renew expiring certificates to avoid downtime
              - alert: NGINXTooMany500s
                expr: 100 * ( sum( nginx_ingress_controller_requests{status=~"5.+"} ) / sum(nginx_ingress_controller_requests) ) > 5
                for: 1m
                labels:
                  severity: warning
                annotations:
                  description: Too many 5XXs
                  summary: More than 5% of all requests returned 5XX, this requires your attention
              - alert: NGINXTooMany400s
                expr: 100 * ( sum( nginx_ingress_controller_requests{status=~"4.+"} ) / sum(nginx_ingress_controller_requests) ) > 5
                for: 1m
                labels:
                  severity: warning
                annotations:
                  description: Too many 4XXs
                  summary: More than 5% of all requests returned 4XX, this requires your attention
                  
          autoscaling:
            annotations: {}
            enabled: false
            minReplicas: 2
            maxReplicas: 5
            targetCPUUtilizationPercentage: {}
            targetMemoryUtilizationPercentage: {}
            autoscalingTemplate:
            # Custom or additional autoscaling metrics
            # ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#support-for-custom-metrics
            - type: Resource
              resource:
              name: cpu
              target:
                type: Utilization
                averageUtilization: 50
          
          config:
            enable-opentracing: "true"
            zipkin-collector-host: otel-collector-opentelemetry-collector.otel-collector.svc.cluster.local
            zipkin-service-name: nginx-internal
            
        podSecurityPolicy:
          enabled: true
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - PruneLast=true
      - CreateNamespace=true
